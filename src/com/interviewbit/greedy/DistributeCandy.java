package com.interviewbit.greedy;

import org.junit.Assert;
import org.junit.Test;

public class DistributeCandy {

	public int candy(int[] A) {
		int[] perStudentCandies = new int[A.length];
		int prevCandy = 1;
		perStudentCandies[0] = 1;
		for (int i = 1; i < A.length; i++) {
			if (A[i] > A[i - 1]) {
				prevCandy++;

			} else if (A[i] <= A[i - 1]) {
				prevCandy = 1;
			}
			perStudentCandies[i] = prevCandy;

		}

		int noOfCandies = 0;
		for (int i = A.length - 1; i >= 0; i--) {
			if (A.length - i > 1 && A[i] > A[i + 1] && perStudentCandies[i] <= perStudentCandies[i + 1]) {
				perStudentCandies[i] = prevCandy + 1;
			}
			prevCandy = perStudentCandies[i];
			noOfCandies = noOfCandies + perStudentCandies[i];
		}
		
		for (int i = 0; i < perStudentCandies.length; i++) {
			System.out.println(A[i]+":"+perStudentCandies[i]);
		}

		return noOfCandies;
	}

	@Test
	public void test3() {
		int[] A = { 81, 1, -445, 280, 486, -26, -299, -410, -415, 308, -463, -365, 271, -474, 135, -293, -50, 192, -250,
				-488, 94, -350, 78, 93, 166, 80, -278, 89, 129, 140, 245, 387, -285, -362, -266, -328, -79, 25, 143,
				-432, 16, 25, 455, -380, -44, -57, -201, -218, -75, 32, 278, 268, 410, -176, -101, -128, -77, 150, 297,
				-473, -48, -368, -312, 275, -442, -321, -357, -214, 120, -285, 311, -283, -49, -208, -464, -168, -339,
				37, -199, -344, -440, 465, -43, -181, -131, 76, 141, 105, -416, -77, -170, -336, -143, 203, 321, 202,
				-244, -228, 197, 251, -198, -10, -387, 3, -61, -40, -40, -127, 241, 339, -326, -72, -11, 147, -428,
				-177, -193, 287, -158, 470, 51, 83, -184, 210, -150, -231, -466, 139, 193, 380, -391, 310, -10, 464, 34,
				281, 119, 445, -188, -436, 28, -455, 117, -367, -118, -467, 398, 101, 399, -265, -97, 497, -14, 72, 329,
				142, -451, 312, 109, -39, 394, -203, 32, 495, 124, 221, -52, -308, -275, 498, 256, 312, -341, -421, 329,
				434, -198, 125, -109, -105, 290, -195, 220, 73, 337, 17, -108, 128, -209, 244, -410, 106, 415, 15, 386,
				-225, -299, -140, -149, -466, -345, -55, 33, -37, -309, 300, -295, -29, 11, 109, 258, 280, -247, 12,
				-307, 18, 70, 71, 147, -84, 158, 426, -465, 195, -3, 345, -497, 222, -441, 315, -101, -36, 389, -462,
				439, -449, 10, 442, -406, 447, 329, -472, 250, -385, -427, -483, 222, -251, -453, 378, -92, 179, -53,
				398, 37, 117, 35, 153, -241, 261, 133, -323, -167, -215, -305, -51, 141, -312, -107, -94, -139, 263,
				-378, 162, 381, 133, -281, -32, 129, -246, 158, -452, 486, 220, -243, 433, 343, -424, -444, -327, 11,
				-49, 163, -368, 262, 253, 249, 139, -357, 489, 169, -333, -70, 287, 178, -484, 296, 499, 164, -93, 217,
				-288, -426, -302, -125, 198, 212, 451, -109, -347, -294, 17, -468, -294, -471, -26, 380, 393, -429, 382,
				-328, 124, 289, 145, 218, 408, -357, -70, -75, 135, 174, 332, 217, 73, -10, -469, 94, -80, 233, 455,
				145, -134, 124, -254, 367, 496, 408, 450, -174, 495, -274, -147, -441, 399, -63, -484, -197, 420, 461,
				220, -285, -121, -387, -279, -316, 317, 121, 221, -180, -358, -422, -469, 489, 496, 489, 459, -189, 410,
				-392, 66, 81, 414, 68, -33, -368, 500, -436, 28, 332, -254, -198, -360, 95, 431, 185, 286, -12, -3, 173,
				-167, 226, 205, 498, 476, 167, 51, -101, 12, 173, -20, -65, -468, -85, 404, 367, -223, -117, 249, 124,
				132, 20, -143, 66, -243, -201, -86, 352, -172, -151, -64, 279, 351, 35, 284, -208, -223, 371, 440, 297,
				342, -400, -152, -496, 44, -78, -68, -147, -40, -252, -269, 349, -492, 250, -222, -27, 104, 464, -132,
				-59, 341, -409, 336, -289, 354, 207, -234, 337, 297, -460, -365, -268, -342, 333, 387, -231, -143, 300,
				-297, 140, 348, 450, -91, -378, 153, -401, 305, 31, 349, 406, 65, 148, -40, 481, -493, 307, 394, 392,
				-192, 347, 312, -244, 408, 466, -186, 191, -117, -72, 123, -140, 163, 441, 61, -57, 35, 69, 104, -472,
				416, -380, -280, -454, 411, -120, 342, 426, 91, -468, 471, 265, 285, 134, 446, -79, 415, 234, 119, -163,
				-374, 331, 400, -186, 468, -429, -402, -262, -172, -19, -141, 276, -109, -63, 475, -244, -407, -484,
				-231, -322, 487, 410, -115, -266, -27, 54, -51, 127, 110, 126, 30, -145, 13, 33, 337, 470, 247, 444,
				-79, 443, -61, 410, 75, 143, 0, -438, 396, -309, 389, -18, -264, -294, -234, -7, -373, -203, -91, -476,
				-53, 17, 30, -459, 362, -339, 234, 232, -418, 56, -111, -348, -428, -175, -383, -468, 239, 235, -143,
				-194, -146, 41, 46, 406, -385, -488, 52, 300, 132, 47, -451, 280, 496, 104, 416, 242, -111, -100, 336,
				-167, -449, -25, -315, -67, -490, 388, 349, -464, 183, 484, -139, -408, 482, -110, -67, -43, -497, -84,
				-375, 326, 286, 244, -54, -381, -145, -157, -33, 369, 244, 27, -298, 237, -345, 222, -367, 391, -372,
				289, -209, -270, -192, 285, -495, -37, 93, -67, -124, 128, 151, -143, -405, 41, -128, -91, -139, -249,
				282, 90, -263, -479, -177, 327, -319, 259, -367, -146, 212, -141, 25, -411, 263, -491, -444, -463, 198,
				346, 263, -157, 95, -371, -194, 377, 378, 60, 473, 227, 245, 405, -419, -14, 416, -397, -360, -157, 430,
				-94, -313, 138, 378, 116, -438, -178, -422, -10, 194, 357, -46, -263, 355, 62, -194, 210, 43, 109, -147,
				-430, -52, 489, 366, -372, -132, 411, 445, 139, 314, -50, 411, -258, 323, 398, 280, -304, 296, -11, -29,
				104, -460, 206, -391, 112, 455, -287, 140, 140, 422, 482, -335, -348 };
		Assert.assertEquals(1640, candy(A));
	}

	@Test
	public void test() {
		int[] A = { 1, 2 };
		Assert.assertEquals(3, candy(A));
	}

	@Test
	public void test1() {
		int[] A = { 1, 5, 2, 1 };
		Assert.assertEquals(7, candy(A));
	}

	@Test
	public void test2() {
		int[] A = { -255, 369, 319, 77, 128, -202, -147, 282, -26, -489, -443, -401, 385, 465, -134, 126, 304, 179, 16,
				112, 473, -467, 279, -233, 66, 76, 408, 148, -369, 328, 138, -164, 492, -276, -326, 170, 168, 189, 13,
				383, 341, 426, 219, 337, -62, -197, 263, 338, -324, 261, 273, -74, -8, -133, 318, -100, 487, -196, -465,
				-495, -136, 94, -201, 491, 204, 323, 156, -337, -99, 115, 179, 184, -249, 76, -396, 265, 500, -83, 270,
				438, -418, 401, -184, -247, -203, 190, 191, -282, -248, 465, 146, 7, -381, 326, -409, 474, 186, -206,
				447, 17, 156, -273, 381, -307, -206, 164, -147, 58, -224, 284, 204, 267, 123, 141, -8, 225, -246, 12,
				399, -261, -104, 191, 390, 152, 313, -91, 8, -476, -363, -183, -280, -282, -431, 366, 89, -166, -257,
				132, 98, -387, 389, -219, -332, 227, 386, -33, 361, -308, -494, -33, 110, 423, -465, -417, 496, -333,
				-259, 402, 36, 380, -385, -329, 283, 389, 396, -161, 466, -405, -293, 442, 259, 377, -386, -386, 329,
				204, 438, 346, -185, -401, -219, 213, 351, -18, -20, 364, 319, 187, 197, 122, -182, -126, -211, -448,
				44, -360, -345, -147, 480, -387, 222, 92, -262, -409, 163, 323, -291, -61, -431, -288, -309, -490, -494,
				328, -207, 398, 475, -228, -37, 44, 227, -371, -91, -440, 220, 39, -73, 80, -189, 37, 94, -96, -400,
				-380, 172, -179, -442, -119, 411, -184, 218, -18, 170, 430, -157, 345, 418, 390, -39, -85, 216, -197,
				-421, 328, -311, 160, 432, 104, -419, -140, -115, -202, 58, 415, 473, -87, 475, 430, 114, -314, 430,
				-419, 375, 258, 255, 42, -63, 54, -352, -337, -180, -31, 441, -382, -176, 209, -137, 171, -89, 155, 421,
				308, -153, 254, -210, -245, 373, -435, -29, -398, 326, 297, 81, -157, 254, 52, 479, 356, -497, -16, 109,
				-353, -20, -122, -172, 23, 20, -344, 203, 372, -306, -9, 238, -190, 495, 9, -2, 125, 150, -180, -340,
				-1, -347, -269, -181, -15, 83, -304, -365, 490, -475, 161, 422, 440, -414, 380, -446, -404, -352, -144,
				-297, -62, -23, -223, 359, 127, 183, -20, 93, -285, -477, 223, 1, 131, -359, -74, 321, 197, 452, -338,
				367, -337, 183, -41, 218, -75, -212, 208, 188, -38, 91, 332, 388, -185, -247, 405, -390, -371, 313,
				-471, 457, 307, 494, -467, -225, -3, -271, -164, -120, 101, 385, -12, 234, -368, -317, 167, 241, -494,
				-279, -288, 452, -499, 372, 464, 234, 16, 40, 264, -474, -400, 429, 33, 495, -285, 201, 190, 328, 127,
				286, 312, 100, -24, 409, -392, 183, -69, -352, -56, -304, -261, -296, -140, 453, 253, -215, 195, 288,
				-300, 10, -104, -491, 275, -275, 175, 24, 387, 408 };
		Assert.assertEquals(930, candy(A));
	}

}
